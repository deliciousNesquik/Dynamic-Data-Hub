<Application x:Class="DynamicDataHub.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="Views/DDHManagerWindow.xaml">
    <Application.Resources>
        <!--Шрифт для всего приложения-->
        <Style TargetType="{x:Type Control}">
            <Setter Property="FontFamily" Value="Segoe UI" />
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
        </Style>
        <!--Элементы управления-->
        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="White" />
        </Style>
        <Style TargetType="ListBox">
            <Setter Property="Background" Value="#121212" />
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#E0E0E0" />
        </Style>

        <!--Окна и рамки-->
        <Style TargetType="Grid">
            <Setter Property="Background" Value="#121212" />
            <!--#FFFFFF-->
        </Style>
        <Style TargetType="Frame">
            <Setter Property="BorderBrush" Value="White" />
        </Style>

        <!--Label button-->
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Transparent" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="White" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White" />
        <ControlTemplate x:Key="LabelButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border"
                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border"
                            Value="{StaticResource Button.MouseOver.Background}" />

                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border"
                            Value="{StaticResource Button.Pressed.Background}" />
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border"
                            Value="{StaticResource Button.Disabled.Background}" />

                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}" />
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                            Value="{StaticResource Button.Disabled.Foreground}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- ~1~Main button@1@ -->
        <SolidColorBrush x:Key="NewButton.MouseOver.Background" Color="#4285F4" />
        <SolidColorBrush x:Key="NewButton.MouseOver.Border" Color="White" />
        <SolidColorBrush x:Key="NewButton.Pressed.Background" Color="#4285F4" />
        <SolidColorBrush x:Key="NewButton.Pressed.Border" Color="White" />
        <SolidColorBrush x:Key="NewButton.Disabled.Background" Color="#4285F4" />
        <SolidColorBrush x:Key="NewButton.Disabled.Border" Color="White" />
        <SolidColorBrush x:Key="NewButton.Disabled.Foreground" Color="White" />
        <ControlTemplate x:Key="MainButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border"
                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border"
                            Value="{StaticResource NewButton.MouseOver.Background}" />
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource NewButton.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border"
                            Value="{StaticResource NewButton.Pressed.Background}" />
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource NewButton.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border"
                            Value="{StaticResource NewButton.Disabled.Background}" />
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource NewButton.Disabled.Border}" />
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                            Value="{StaticResource NewButton.Disabled.Foreground}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>

</Application>
